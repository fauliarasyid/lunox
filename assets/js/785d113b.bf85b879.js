"use strict";(self.webpackChunklunox=self.webpackChunklunox||[]).push([[649],{9613:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var i=t(9496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),l=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,v=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?i.createElement(v,o(o({ref:n},p),{},{components:t})):i.createElement(v,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6560:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var i=t(5900),r=t(4750),a=(t(9496),t(9613)),o=["components"],c={sidebar_position:2},s="Service Container",l={unversionedId:"architectur-concepts/service-container",id:"architectur-concepts/service-container",title:"Service Container",description:"LunoX Service Container is inspired by Laravel's service container. The basic concept is same, but we have limitations because of nodejs nature. In Laravel, we can dynamically performing dependency injection. In LunoX, we must explicitly bind and resolve some class or instance.",source:"@site/docs/architectur-concepts/service-container.md",sourceDirName:"architectur-concepts",slug:"/architectur-concepts/service-container",permalink:"/lunox/docs/architectur-concepts/service-container",editUrl:"https://github.com/kodepintar/edit/gh-pages/website/docs/architectur-concepts/service-container.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Request Lifecycle",permalink:"/lunox/docs/architectur-concepts/request-lifecycle"}},p=[{value:"Binding",id:"binding",children:[{value:"Simple Binding",id:"simple-binding",children:[],level:3},{value:"Singleton Binding",id:"singleton-binding",children:[],level:3}],level:2},{value:"Resolving",id:"resolving",children:[],level:2}],u={toc:p};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"service-container"},"Service Container"),(0,a.kt)("p",null,"LunoX Service Container is inspired by Laravel's service container. The basic concept is same, but we have limitations because of nodejs nature. In Laravel, we can dynamically performing dependency injection. In LunoX, we must explicitly bind and resolve some class or instance."),(0,a.kt)("h2",{id:"binding"},"Binding"),(0,a.kt)("p",null,"We can bind some class or function to container instance and resolve it later somewhere in your application code."),(0,a.kt)("h3",{id:"simple-binding"},"Simple Binding"),(0,a.kt)("p",null,"Almost all of your service container bindings will be registered on service providers. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"bind")," method to bind some class to container. Different from Laravel, we can bind class name to container, but there is nothing todo with nodejs. So we must use unique string for binding instance or function."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import Payment from './Service/Payment';\nimport db from './Support/DatabaseManager';\n\n// bind some class\nthis.app.bind('Payment', Payment);\n\n// bind function or instance\nthis.app.bind('Payment', ()=>new Payment('Paypall'));\n\n// or you can bind simple object to application instance\nthis.app.instance('db', db);\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"this.app")," is LunoX Application instance. See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kodepintar/lunox-framework/blob/main/src/Foundation/Application.ts"},"Application")," class for more detail."),(0,a.kt)("p",null,"Sometimes you cannot get application instance, for example outside service providers. You can use global ",(0,a.kt)("inlineCode",{parentName:"p"},"app()")," helper to get LunoX Application instance."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"app().bind('Payment', Payment);\n")),(0,a.kt)("h3",{id:"singleton-binding"},"Singleton Binding"),(0,a.kt)("p",null,"If you want bind some instance then share the instance object, use singleton instead. Once a singleton binding is resolved, the same object instance will be returned. I think you are familiar with this concept on Laravel."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import Counter from './Calc/Counter';\n\nthis.app.singleton('counter', Counter);\n")),(0,a.kt)("h2",{id:"resolving"},"Resolving"),(0,a.kt)("p",null,"To resolve some object from container, currently we only suppport ",(0,a.kt)("inlineCode",{parentName:"p"},"make")," method from application instance. We also can resolve by inserting ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"app()")," global method. Both example are same"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const payment = this.app.make('Payment');\n\nconst payment = app('Payment');\n")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"We can also resolve instance with property"),(0,a.kt)("pre",{parentName:"div"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'const payment = this.app.make("counter", {initialValue: 0})\n')))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note that ",(0,a.kt)("inlineCode",{parentName:"p"},"app")," instance are singleton")))}d.isMDXComponent=!0}}]);